## built-in TCP input
## $ echo <json> | fluent-cat <tag>

<source>
  @type forward
  @id forward_input
</source>

#################
## Input      ###
#################

########## Jvision ################
<source>
    @type udp
    tag juniperNetworks
    format juniper_udp_native
    port {{ PORT_JTI }}
    bind 0.0.0.0
    message_length_limit 5000
    # Some gpb datagram has newlineinside, if it exist the protobuffer will fail to parser data
    remove_newline false
</source>

########## Juniper Filter ################
<filter juniperNetworks.**>
  @type record_transformer
  enable_ruby true
  <record>
    rt ${device.split(':')[0]} 
    ip ${device.split(':')[1]} 
  </record>
</filter>

#################
## Output     ###
#################

##### CPU #######

<match juniperNetworks.cpu_memory_util_ext>
    @type copy
{% if OUTPUT_STDOUT == 'true' %}
    <store>
        @type stdout
        @id stdout_output
        localtime
    </store>
{% endif %}
{% if OUTPUT_INFLUXDB == 'true' %}
    <store>
        @type influxdb

        host "{{ INFLUXDB_ADDR }}"
        port "{{ INFLUXDB_PORT }}"
        dbname "{{ INFLUXDB_DB }}"
        user "{{ INFLUXDB_USER }}"
        password "{{ INFLUXDB_PWD }}"
        time_precision ms
        tag_keys ["device","utilization.application_utilization.name","utilization.name"]
        tag_keys_field key_fields
        ####
        buffer_type memory
        # buffer_chunk_limit 524288 # 512 * 1024
        # buffer_queue_limit 1024
        flush_interval "{{ INFLUXDB_FLUSH_INTERVAL }}"
        # retry_limit 17
        # retry_wait 1.0
        # num_threads 1
    </store>
{% endif %}

## TODO investigate forest plugin https://github.com/tagomoris/fluent-plugin-forest

{% if OUTPUT_KAFKA == 'true' %}
    <store>
      @type kafka

      # Brokers: you can choose either brokers or zookeeper.
      brokers               {{ KAFKA_ADDR }}:{{ KAFKA_PORT }}
      # zookeeper           <zookeeper_host>:<zookeeper_port> # Set brokers via Zookeeper

      default_topic         {{ KAFKA_TOPIC }}
      # default_partition_key (string)   :default => nil
      output_data_type      {{ KAFKA_DATA_TYPE }} # |ltsv|msgpack|attr:<record name>|<formatter name>)
      output_include_tag    true # |false) :default => false
      output_include_time   true # |false) :default => false

      # max_send_retries    (integer)    :default => 3
      # required_acks       (integer)    :default => 0
      # ack_timeout_ms      (integer)    :default => 1500
      compression_codec     {{ KAFKA_COMPRESSION_CODEC }} # (none|gzip|snappy) :default => none
    </store>
{% endif %}
</match>

################ END CPU ################

############### PACKET STATS #############

<match juniperNetworks.jnpr_packet_statistics_ext>
    @type copy
{% if OUTPUT_STDOUT == 'true' %}
    <store>
        @type stdout
        @id stdout_output
        localtime
    </store>
{% endif %}
{% if OUTPUT_INFLUXDB == 'true' %}
    <store>
        @type influxdb
        host "{{ INFLUXDB_ADDR }}"
        port "{{ INFLUXDB_PORT }}"
        dbname "{{ INFLUXDB_DB }}"
        user "{{ INFLUXDB_USER }}"
        password "{{ INFLUXDB_PWD }}"
        time_precision ms
        tag_keys ["device","packet_stats.name"]
        tag_keys_field key_fields
        ####
        buffer_type memory
        # buffer_chunk_limit 524288 # 512 * 1024
        # buffer_queue_limit 1024
        flush_interval "{{ INFLUXDB_FLUSH_INTERVAL }}"
        # retry_limit 17
        # retry_wait 1.0
        # num_threads 1
    </store>
{% endif %}

## TODO investigate forest plugin https://github.com/tagomoris/fluent-plugin-forest

{% if OUTPUT_KAFKA == 'true' %}
    <store>
      @type kafka

      # Brokers: you can choose either brokers or zookeeper.
      brokers               {{ KAFKA_ADDR }}:{{ KAFKA_PORT }}
      # zookeeper           <zookeeper_host>:<zookeeper_port> # Set brokers via Zookeeper

      default_topic         {{ KAFKA_TOPIC }}
      # default_partition_key (string)   :default => nil
      output_data_type      {{ KAFKA_DATA_TYPE }} # |ltsv|msgpack|attr:<record name>|<formatter name>)
      output_include_tag    true # |false) :default => false
      output_include_time   true # |false) :default => false

      # max_send_retries    (integer)    :default => 3
      # required_acks       (integer)    :default => 0
      # ack_timeout_ms      (integer)    :default => 1500
      compression_codec     {{ KAFKA_COMPRESSION_CODEC }} # (none|gzip|snappy) :default => none
    </store>
{% endif %}
</match>

############### END PACKETS STATS #########

############### LSP STATS #################

<match juniperNetworks.jnpr_lsp_statistics_ext>
    @type copy
{% if OUTPUT_STDOUT == 'true' %}
    <store>
        @type stdout
        @id stdout_output
        localtime
    </store>
{% endif %}
{% if OUTPUT_INFLUXDB == 'true' %}
    <store>
        @type influxdb
        host "{{ INFLUXDB_ADDR }}"
        port "{{ INFLUXDB_PORT }}"
        dbname "{{ INFLUXDB_DB }}"
        user "{{ INFLUXDB_USER }}"
        password "{{ INFLUXDB_PWD }}"
        time_precision ms
        tag_keys ["device","lsp_stats_records.name"]
        tag_keys_field key_fields
        ####
        buffer_type memory
        # buffer_chunk_limit 524288 # 512 * 1024
        # buffer_queue_limit 1024
        flush_interval "{{ INFLUXDB_FLUSH_INTERVAL }}"
        # retry_limit 17
        # retry_wait 1.0
        # num_threads 1
    </store>
{% endif %}

## TODO investigate forest plugin https://github.com/tagomoris/fluent-plugin-forest

{% if OUTPUT_KAFKA == 'true' %}
    <store>
      @type kafka

      # Brokers: you can choose either brokers or zookeeper.
      brokers               {{ KAFKA_ADDR }}:{{ KAFKA_PORT }}
      # zookeeper           <zookeeper_host>:<zookeeper_port> # Set brokers via Zookeeper

      default_topic         {{ KAFKA_TOPIC }}
      # default_partition_key (string)   :default => nil
      output_data_type      {{ KAFKA_DATA_TYPE }} # |ltsv|msgpack|attr:<record name>|<formatter name>)
      output_include_tag    true # |false) :default => false
      output_include_time   true # |false) :default => false

      # max_send_retries    (integer)    :default => 3
      # required_acks       (integer)    :default => 0
      # ack_timeout_ms      (integer)    :default => 1500
      compression_codec     {{ KAFKA_COMPRESSION_CODEC }} # (none|gzip|snappy) :default => none
    </store>
{% endif %}
</match>

############### END LSP STATS #############


################## ALL #############
<match juniperNetworks.**>
    @type copy
{% if OUTPUT_STDOUT == 'true' %}
    <store>
        @type stdout
        @id stdout_output
        localtime
    </store>
{% endif %}
{% if OUTPUT_INFLUXDB == 'true' %}
    <store>
        @type influxdb

        host "{{ INFLUXDB_ADDR }}"
        port "{{ INFLUXDB_PORT }}"
        dbname "{{ INFLUXDB_DB }}"
        user "{{ INFLUXDB_USER }}"
        password "{{ INFLUXDB_PWD }}"
        time_precision ms
        tag_keys ["device"]
        tag_keys_field key_fields
        ####
        buffer_type memory
        # buffer_chunk_limit 524288 # 512 * 1024
        # buffer_queue_limit 1024
        flush_interval "{{ INFLUXDB_FLUSH_INTERVAL }}"
        # retry_limit 17
        # retry_wait 1.0
        # num_threads 1
    </store>
{% endif %}

## TODO investigate forest plugin https://github.com/tagomoris/fluent-plugin-forest

{% if OUTPUT_KAFKA == 'true' %}
    <store>
      @type kafka

      # Brokers: you can choose either brokers or zookeeper.
      brokers               {{ KAFKA_ADDR }}:{{ KAFKA_PORT }}
      # zookeeper           <zookeeper_host>:<zookeeper_port> # Set brokers via Zookeeper

      default_topic         {{ KAFKA_TOPIC }}
      # default_partition_key (string)   :default => nil
      output_data_type      {{ KAFKA_DATA_TYPE }} # |ltsv|msgpack|attr:<record name>|<formatter name>)
      output_include_tag    true # |false) :default => false
      output_include_time   true # |false) :default => false

      # max_send_retries    (integer)    :default => 3
      # required_acks       (integer)    :default => 0
      # ack_timeout_ms      (integer)    :default => 1500
      compression_codec     {{ KAFKA_COMPRESSION_CODEC }} # (none|gzip|snappy) :default => none
    </store>
{% endif %}

{% if OUTPUT_PROMETHEUS == 'true' %}
    <store>
        @type prometheus
  	<metric>
	  name jti_interface_ingress_bytes_total
	  type counter
	  desc The total number of octets (ingress)
	  key interface_stats.ingress_stats.if_octets
        </metric>
  	<metric>
	  name jti_interface_egress_bytes_total
	  type counter
	  desc The total number of octets (egress)
	  key interface_stats.egress_stats.if_octets
        </metric>
  	<metric>
	  name jti_interface_ingress_1sec_bytes_rate
	  type gauge
	  desc The rate of octets (ingress) by 1 second
	  key interface_stats.ingress_stats.if_1sec_octets
        </metric>
  	<metric>
	  name jti_interface_egress_1sec_bytes_rate
	  type gauge
	  desc The rate of octets (egress) 1 second
	  key interface_stats.egress_stats.if_1sec_octets
        </metric>
  	<metric>
	  name jti_interface_egress_erro_total
	  type counter
	  desc The total of interface erros (egress) 
	  key interface_stats.egress_stats.if_error
        </metric>
  	<metric>
	  name jti_interface_ingress_erro_total
	  type counter
	  desc The total of interface erros (ingress) 
	  key interface_stats.ingress_stats.if_error
        </metric>
  	<metric>
	  name jti_interface_egress_discards_total
	  type counter
	  desc The total of interface discards pkts (egress) 
	  key interface_stats.egress_errors.if_discards
        </metric>
  	<metric>
	  name jti_interface_ingress_discards_total
	  type counter
	  desc The total of interface discards pkts (ingress) 
	  key interface_stats.ingress_errors.if_discards
        </metric>
  	<metric>
	  name jti_interface_ingress_uc_total
	  type counter
	  desc The total of interface unicast pkts (ingress) 
	  key interface_stats.ingress_stats.if_uc_pkts
        </metric>
  	<metric>
	  name jti_interface_ingress_mc_total
	  type counter
	  desc The total of interface multicast pkts (ingress) 
	  key interface_stats.ingress_stats.if_mc_pkts
        </metric>
  	<metric>
	  name jti_interface_ingress_bc_total
	  type counter
	  desc The total of interface broadcast pkts (ingress) 
	  key interface_stats.ingress_stats.if_bc_pkts
        </metric>
  	<metric>
	  name jti_interface_egress_uc_total
	  type counter
	  desc The total of interface unicast pkts (egress) 
	  key interface_stats.egress_stats.if_uc_pkts
        </metric>
  	<metric>
	  name jti_interface_egress_mc_total
	  type counter
	  desc The total of interface multicast pkts (egress) 
	  key interface_stats.egress_stats.if_mc_pkts
        </metric>
  	<metric>
	  name jti_interface_egress_bc_total
	  type counter
	  desc The total of interface broadcast pkts (egress) 
	  key interface_stats.egress_stats.if_bc_pkts
        </metric>
  	#<metric>
	#  name jti_interface_status
	#  type gauge
	#  desc The interface status
	#  key interface_stats.if_operational_status
        #</metric>
        <labels>
          tag ${tag}
          rt ${rt}
          ip ${ip}
          interface ${interface_stats.if_name}
        </labels>
    </store>
{% endif %}
</match>

########################### END INTERFACE #############################

# Listen HTTP for monitoring
# http://localhost:24220/api/plugins
# http://localhost:24220/api/plugins?type=TYPE
# http://localhost:24220/api/plugins?tag=MYTAG
<source>
  @type monitor_agent
  @id monitor_agent_input
  port 24220
</source>

# Listen DRb for debug
<source>
  @type debug_agent
  @id debug_agent_input
  bind 127.0.0.1
  port 24230
</source>

## match tag=debug.** and dump to console
<match debug.**>
  @type stdout
  @id stdout_output
</match>

# match fluent's internal events
<match fluent.**>
  @type stdout
</match>

# expose metrics in prometheus format
<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>
